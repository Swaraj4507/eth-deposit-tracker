version: '3.8'

services:
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: eth-tracker-main
    command: node index.js
    env_file:
      - ./backend/.env
    ports:
      - "3030:3030"
    depends_on:
      - rabbitmq
      - influxdb
    networks:
      - app_network

  telegram_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: eth-tracker-telegram
    command: node telegram_worker.js
    env_file:
      - ./backend/.env
    depends_on:
      - rabbitmq
    networks:
      - app_network

  influxdb_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: eth-tracker-influxdb
    command: node influxdb_worker.js
    env_file:
      - ./backend/.env
    depends_on:
      - rabbitmq
      - influxdb
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmqc
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    networks:
      - app_network

  influxdb:
    image: influxdb:2.0
    container_name: influxdbc
    ports:
      - "8086:8086"
    env_file:
      - ./graphana_influx/influxdb.env
    volumes:
      - ./influxdb:/var/lib/influxdb2
    networks:
      - app_network

  grafana:
    image: grafana/grafana
    container_name: grafanac
    ports:
      - "3000:3000"
    env_file:
      - ./graphana_influx/grafana.env
    volumes:
      - ./grafana:/var/lib/grafana
    depends_on:
      - influxdb
    networks:
      - app_network

networks:
  app_network:
    driver: bridge